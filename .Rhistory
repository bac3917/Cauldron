library(maptools)
library(rgdal)
library(ggthemes)
library(ggplot2)
setwd("~c:/BasicShapefiles")
CentralPAzips<-readOGR(dsn="C:/BasicShapefiles/CentralPAzips.shp",layer="CentralPAzips")
pa_map <- fortify(CentralPAzips)
# get hbgSk data
library(dplyr)
library(ggplot2)
library(Hmisc)
library(plotly)
library(googlesheets)
suppressMessages(library(dplyr))
my_sheets<-gs_ls()
my_sheets  # prints a list of sheets on the Google account
hbgsk<-gs_title("hbgSk2017") #assigns a paticular sheet to an R dataframe
gs_ws_ls(hbgsk)                         # This command identifies the name of worksheet used in next command
#read data
hbgsk <-hbgsk %>% gs_read(ws = "Form Responses 1")
colnames(hbgsk)<-paste0("Q",1:ncol(hbgsk))
library(reshape)
hbgsk<-rename(hbgsk,c(Q5='zip'))
hbgsk$zip<-as.numeric(factor(hbgsk$zip))
hbgsk$zipFACTOR<-factor(hbgsk$zip)
# make map
gg<-ggplot()
ids <- factor(c("1.1", "2.1", "1.2", "2.2", "1.3", "2.3"))
values <- data.frame(
id = ids,
value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5)
)
positions <- data.frame(
id = rep(ids, each = 4),
x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,
0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),
y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,
2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2)
)
# Currently we need to manually merge the two together
datapoly <- merge(values, positions, by = c("id"))
p <- ggplot(datapoly, aes(x = x, y = y)) +
geom_polygon(aes(fill = value, group = id))
p
coordinate system, e.g.:
stream <- data.frame(
x = cumsum(runif(50, max = 0.1)),
y = cumsum(runif(50,max = 0.1))
)
p + geom_line(data = stream, colour = "grey30", size = 5)
gg<-gg+geom_polygon(data=CentralPAzips, colour='black', fill=NA)
gg<-gg+geom_map(data=hbgsk,map=pa_map,
aes(fill=as.factor(hbgsk$zip),map_id=hbgsk$zip), color="#7f7f7f", fill="white", size=0.25)
gg
gg<-gg+geom_polygon(data=CentralPAzips, aes(x=CentralPAzips$INTPTLON, y=CentralPAzips$INTPTLAT), colour='black', fill=NA)
gg<-gg+geom_map(data=hbgsk,map=pa_map,
aes(fill=as.factor(hbgsk$zip),map_id=hbgsk$zip), color="#7f7f7f", fill="white", size=0.25)
gg
require(maps)
set.seed(47)
county_map <- map_data("county", "washington")
names(county_map)[5:6] <- c("state", "id")
countyData <- data.frame(id = unique(county_map$id), value = rnorm(39))
map1 <- ggplot(countyData, aes(map_id = id)) +
geom_map(aes(fill = value), map = county_map, colour = "black") +
coord_map() +
expand_limits(x = county_map$long, y = county_map$lat)
print(map1)
library(maps)
zip_map<-map_data("zips","pennsylvania")
library(maps)
zip_map<-map_data("zips","pennsylvania")
library(zipcode)
us<-map_data("pennsylvania")
us<-map_data("pennsylvania")
us<-map_data("state")
us
ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25)+
theme_awhstin(grid(=F)+xlim(-125,-65)+ylim(20,50)
# make map
gg<-ggplot()
gg<-gg+geom_polygon(data=CentralPAzips, aes(x=CentralPAzips$INTPTLON, y=CentralPAzips$INTPTLAT), colour='black', fill=NA)
# fills must be factor values!
gg<-gg+geom_map(data=hbgsk,map=pa_map,
aes(fill=as.factor(hbgsk$zip),map_id=hbgsk$zip), color="#7f7f7f", fill="white", size=0.25)
gg
### another attempt
# tips: http://stackoverflow.com/questions/31641945/choropleth-zip-code?rq=1
library(maptools)
library(rgdal)
library(ggthemes)
library(ggplot2)
CentralPAzips<-readOGR(dsn="Research_and_Evaluation_Group/GENERAL/GIS_Shapefiles/PA/PA_ZIPS/CentralPAzips.shp",
layer="CentralPAzips")
#CentralPAzips
Smap<-fortify(CentralPAzips,region="ZCTA4CE")
gg <- ggplot()
#draw the base map polygons
gg<-gg+geom_map(data=Smap,map = Smap,
aes(x=Smap$long,y=Smap$lat, map_id=Smap$id),
color="#7f7f7f", size=0.25)
# next, fill in polygons
gg<-gg+geom_map(data=hbgsk,map=Smap,
aes(fill=hbgsk$Q6, map_id=hbgsk$zip)  )
ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25)+
theme_awhstin(grid(=F)+xlim(-125,-65)+ylim(20,50))
ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25) )
q<-ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25) )
q<-ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25)
q''
q
q
q<-ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25) +
theme_awhstin(grid=F)+xlim(-125,-65)+ylim(20,50)
library(viridis)
q<-ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25) +
theme_awhstin(grid=F)+xlim(-125,-65)+ylim(20,50)
q<-ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25)
q
q<-ggplot(hbgsk,aes(CentralPAzips$INTPTLON,CentralPAzips$INTPTLAT))+ geom_polygon(data=us,aes(x=long,y=lat,group=group),
color='gray',fill=NA,alpha=.35)+
geom_point(aes(color=count),size=.15,alpha=.25) +
theme_awhstin(grid=F)+    xlim(-125,-65)+ylim(20,50)
fm<-read.csv('Export.csv',stringsAsFactors = F)
data(zipcode)
fm$zip<- clean.zipcodes(fm$zip)
#size by zip
fm.zip<-aggregate(data.frame(count=fm$FMID),list(zip=fm$zip),length)
fm<- merge(fm.zip, zipcode, by='zip')
fm<-read.csv('//s-drive/home/Profiles/bcohen/Desktop/GitHub/Cauldron/Export.csv',stringsAsFactors = F)
data(zipcode)
fm$zip<- clean.zipcodes(fm$zip)
#size by zip
fm.zip<-aggregate(data.frame(count=fm$FMID),list(zip=fm$zip),length)
fm<- merge(fm.zip, zipcode, by='zip')
library(readr)
Export <- read_csv("//s-drive/home/Profiles/bcohen/Desktop/GitHub/Cauldron/Export.csv")
View(Export)
ggplot(fm,aes(longitude,latitude)) +
geom_polygon(data=us,aes(x=long,y=lat,group=group),color='gray',fill=NA,alpha=.35)+
geom_point(aes(color = count),size=.15,alpha=.25) +
theme_awhstin(grid=F)+
xlim(-125,-65)+ylim(20,50)
Export <- read_csv("//s-drive/home/Profiles/bcohen/Desktop/GitHub/Cauldron/Export.csv")
library(zipcode)
library(ggplot2)
library(maps)
library(viridis)
#data
fm<-read.csv('Export.csv',stringsAsFactors = F)
data(zipcode)
fm$zip<- clean.zipcodes(fm$zip)
#size by zip
fm.zip<-aggregate(data.frame(count=fm$FMID),list(zip=fm$zip),length)
fm<- merge(fm.zip, zipcode, by='zip')
us<-map_data('state')
ggplot(fm,aes(longitude,latitude)) +
geom_polygon(data=us,aes(x=long,y=lat,group=group),color='gray',fill=NA,alpha=.35)+
geom_point(aes(color = count),size=.15,alpha=.25) +
theme_awhstin(grid=F)+
xlim(-125,-65)+ylim(20,50)
ggplot(fm,aes(longitude,latitude)) +
geom_polygon(data=us,aes(x=long,y=lat,group=group),color='gray',fill=NA,alpha=.35)+
geom_point(aes(color = count),size=.15,alpha=.25) +
theme_bw(grid=F)+
xlim(-125,-65)+ylim(20,50)
ggplot(fm,aes(longitude,latitude)) +
geom_polygon(data=us,aes(x=long,y=lat,group=group),color='gray',fill=NA,alpha=.35)+
geom_point(aes(color = count),size=.15,alpha=.25) +
theme_bw()+
xlim(-125,-65)+ylim(20,50)
#counties
county_df <- map_data("county")
names(county_df) <- c("long", "lat", "group", "order", "state_name", "county")
county_df$state <- state.abb[match(county_df$state_name, tolower(state.name))]
county_df$state_name <- NULL
fm$county<-tolower(fm$county)
state_df <- map_data("state")
choropleth <- merge(county_df, fm, by = c("state", "county"))
choropleth <- choropleth[order(choropleth$order), ]
choropleth <- merge(county_df, fm, by = c("state", "county"))
choropleth <- choropleth[order(choropleth$order), ]
ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = log(count)), colour = alpha("gray", 1 / 2), size = 0.2) +
geom_polygon(data = state_df, colour = "white", fill = NA) +
theme_awhstin() +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), axis.title = element_blank()) +
scale_fill_viridis(option="B",direction=-1)
ggplot(fm,aes(longitude,latitude)) +
geom_polygon(data=us,aes(x=long,y=lat,group=group),color='gray',fill=NA,alpha=.35)+
geom_point(aes(color = count),size=.15,alpha=.25) +
theme_bw()+
xlim(-81,-68)+ylim(38,44)
library(dplyr)
library(plyr)
library(Hmisc)
library(googlesheets)
suppressMessages(library(dplyr))
my_sheets<-gs_ls()
my_sheets  # prints a list of sheets on the Google account
trainers<-gs_title("HmarkTrainers2017") #assigns a paticular sheet to an R dataframe
trainers
gs_ws_ls(trainers)                         # This command identifies the name of worksheet used in next command
principals<-gs_title("hmarkBprevent")
gs_ws_ls(principals)
#read data
trainers <-trainers %>% gs_read(ws = "Form Responses 1")
principals<-principals%>%gs_read(ws="Form Responses 1")
# read certain cells and not the column names:
# trainers<-trainers %>% gs_read(ws = "Form Responses 1",range=cell_cols(1:8),col_names=FALSE)
# change olong column names to short ones
colnames(trainers)<-paste0("Q",1:ncol(trainers))
colnames(principals)<-paste0("p",1:ncol(principals))
